name:                memo
version:             0.0.0
cabal-version:       >=2.0
build-type:          Simple 
category:            Data,Memoization
synopsis:            TODO 
description:         
 .
 TODO
 . 
 see the source of "Memoize.Example" for an example.
 .
 transitive dependencies:
 .
 <<memo.png>>

homepage:            http://github.com/sboosali/memo#readme
bug-reports:         http://github.com/sboosali/memo/issues
author:              Spiros Boosalis
maintainer:          samboosalis@gmail.com
copyright:           2018 Spiros Boosalis
license:             BSD3
license-file:        LICENSE
stability:           provisional
tested-with:         GHC == 8.2.2

-- PVP
-- https://wiki.haskell.org/Package_versioning_policy
-- "A.B is known as the major version number, and C the minor version number."

extra-source-files:
  README.md
  stack.yaml
  .travis.yml
  HLint.hs

-- data-files:
--   data/

source-repository head
  type:     git
  location: https://github.com/sboosali/memo

-- make the `template` test suite dump its template-haskell splices
flag dump-splices
  default: False
  manual: True


library
 hs-source-dirs:      sources
 default-language:    Haskell2010
 ghc-options:
  -Wall
-- disable
  -fno-warn-unticked-promoted-constructors
-- enable
  -fwarn-incomplete-uni-patterns
  -fwarn-incomplete-record-updates
  -fwarn-identities
  -fwarn-missing-fields

 default-extensions: AutoDeriveTypeable DeriveDataTypeable DeriveGeneric
                     DeriveFunctor DeriveFoldable DeriveTraversable
                     LambdaCase EmptyCase TypeOperators PostfixOperators
                     ViewPatterns BangPatterns KindSignatures
                     NamedFieldPuns RecordWildCards TupleSections
                     MultiWayIf DoAndIfThenElse EmptyDataDecls
                     MultiParamTypeClasses FlexibleContexts FlexibleInstances
                     TypeFamilies FunctionalDependencies
                     ScopedTypeVariables StandaloneDeriving PackageImports 

 exposed-modules:
                 Memoize
                 Memoize.Types
                 Memoize.Core
                 Memoize.Example

                 -- Memoize.Trie
                 Memoize.Map
                 -- Memoize.HashMap
                 -- Memoize.StableName 
                 -- Memoize.

 other-modules:

                 Memoize.Extra
                 -- Paths_memo
-- autogen-modules:
                 -- Paths_memo

 build-depends:
               base >=4.7 && <5

-- mine 
             , spiros
--              , enumerate 

             , uglymemo
--             , stable-memo
             , data-memocombinators

-- (extended) standard library 
             , deepseq
             , hashable
             , containers
             , unordered-containers
             , text 
             , bytestring
             , transformers
             , mtl

-- ekmett 
             , exceptions
             , microlens

-- other packages 

             , MemoTrie


executable example-memo
 hs-source-dirs:      executables
 main-is:             Main.hs

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , memo


-- $ stack test documentation
test-suite documentation 
 hs-source-dirs:      tests
 main-is:             DocTests.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , memo
  , doctest


-- $ stack test unit
test-suite unit
 hs-source-dirs:      tests
 main-is:             UnitTests.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 other-modules:
  Memoize.Test

 build-depends:
    base
  , memo 
  , tasty
  

-- $ stack test properties 
test-suite properties 
 hs-source-dirs:      tests
 main-is:             PropertyTests.hs
 type:                exitcode-stdio-1.0

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 other-modules:
  Memoize.Property 

 build-depends:
    base
  , memo
  , QuickCheck 
  , tasty
  , tasty-quickcheck


-- $ stack test templates 
-- Template Haskell 
test-suite templates
  type: exitcode-stdio-1.0
  main-is: TemplateHaskellTests.hs
  ghc-options: -Wall -threaded
  hs-source-dirs: tests

  if flag(dump-splices)
    ghc-options: -ddump-splices
    
  build-depends:
      base
    , memo
  

-- $ stack bench 
benchmark everything 
 hs-source-dirs:      benchmarks
 main-is:             Bench.hs
 type:                exitcode-stdio-1.0

 default-language: Haskell2010
 ghc-options:      -Wall -O2 -threaded -fdicts-cheap -funbox-strict-fields
 
 build-depends:
    base
  , memo
  , criterion
  , deepseq


-- originally generated with this command:  
-- 
-- $ stack new memo https://raw.githubusercontent.com/sboosali/configuration/master/stack/templates/spirosboosalis.hsfiles -p "module:Memoize" -p "filepath:Memoize" -p "synopsis:TODO" 
-- 
-- given this configuration in `.stack/config.yaml`: 
-- 
-- templates:
--   params:
--     author-email:    samboosalis@gmail.com 
--     author-name:     Spiros Boosalis 
--     github-username: sboosali 
--     copyright:       2018 Spiros Boosalis  
--     synopsis:        TODO 

